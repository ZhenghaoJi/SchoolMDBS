import pymysql
from tkinter import ttk
from tkinter import *
import tkinter as tk


# database = pymysql.connect('localhost', 'root', 'jzh990828', charset='utf8', port='3306')


class Startpage:
    def __init__(self, parent_window):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统')
        self.window.geometry('800x600')
        Label(self.window, text='选课系统', width=50, height=3, font=28).pack(pady=100)
        Button(self.window, text='For Admin', font=24, fg='white', activebackground='red', bg='gray', width=30,
               height=3, command=lambda: Adminpage(self.window)).pack()
        Button(self.window, text='For Students in FDU', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: Stupage(self.window)).pack()
        Button(self.window, text='For Teachers in FDU', fg='white', activebackground='red', activeforeground='white',
               bg='gray', width=30, height=3, font=24, command=lambda: Teacherpage(self.window)).pack()
        Button(self.window, text='Visitor', font=24, fg='white', activebackground='red', bg='gray', width=30, height=3,
               command=lambda: Vistorpage(self.window)).pack()
        self.window.mainloop()


class Adminpage:
    def __init__(self, parent_window):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-管理员界面')
        self.window.geometry('800x600')
        Label(self.window, text='管理员登陆', font=24).pack(pady=100)
        Label(self.window, text='管理员登陆账号', font=18).pack()
        self.admin_id = Entry(self.window).pack()
        Label(self.window, text='管理员登陆密码', font=18).pack()
        self.admin_pw = Entry(self.window).pack()
        Button(self.window, text='Sign in', font=24, command=lambda: self.login_admin2()).pack()

        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack(pady=100)

        self.window.mainloop()

    def login_admin2(self):
        # 假的登陆函数
        AdminManage(self.window, ad_id=self.admin_id)

    def login_admin(self):
        # back to adminpage or go to admin manage page
        db = pymysql.connect('localhost', 'root', '', charset='utf8', port=3306)
        cursor = db.cursor()
        sql = "select * from admin_login where adminid='%s'and adminpw='%s'" % (self.admin_id.get(),
                                                                                self.admin_pw.get())

        try:
            cursor.execute(sql)
            results = cursor.fetchone()
            if (results == None):
                print("Wrong password or not exists the id.")
                db.close()
                Adminpage(self.window)
            else:
                print("Welcome!")
                db.close()
                AdminManage(self.window, ad_id=self.admin_id)
        except:
            print("Something wrong happened.")
            db.close()
            Adminpage(self.window)


class AdminManage:
    # we have signed in.
    def __init__(self, parent_window, ad_id):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-管理员操作界面')
        self.window.geometry('800x600')
        Label(self.window, text='管理员可执行操作', font=24).pack(pady=100)
        Button(self.window, text='学生管理', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.admin_consult()).pack()
        Button(self.window, text='教师管理', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.admin_add()).pack()
        Button(self.window, text='成绩登陆', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.admin_delete()).pack()
        # backpage
        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack()
        self.window.mainloop()

        def admin_consult(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def admin_add(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def admin_delete(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)


class Stupage:
    def __init__(self, parent_window):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-学生界面')
        self.window.geometry('800x600')
        Label(self.window, text='学生登陆', font=24).pack(pady=100)
        Label(self.window, text='学号', font=18).pack()
        self.admin_id = Entry(self.window).pack()
        Label(self.window, text='密码', font=18).pack()
        self.admin_pw = Entry(self.window).pack()
        Button(self.window, text='Sign in', font=24, command=lambda: self.login_admin2()).pack()

        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack(pady=100)

        self.window.mainloop()

    def login_admin2(self):
        # 假的登陆函数
        StuManage(self.window, stu_id=self.admin_id)

    def login_admin(self):
        # back to adminpage or go to admin manage page
        db = pymysql.connect('localhost', 'root', '', charset='utf8', port=3306)
        cursor = db.cursor()
        sql = "select * from admin_login where stuid='%s'and stupw='%s'" % (self.admin_id.get(),
                                                                            self.admin_pw.get())

        try:
            cursor.execute(sql)
            results = cursor.fetchone()
            if (results == None):
                print("Wrong password or not exists the id.")
                db.close()
                Adminpage(self.window)
            else:
                print("Welcome!")
                db.close()
                AdminManage(self.window, ad_id=self.admin_id)
        except:
            print("Something wrong happened.")
            db.close()
            Adminpage(self.window)


class StuManage:
    # we have signed in.
    def __init__(self, parent_window, stu_id):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-学生操作界面')
        self.window.geometry('800x600')
        Label(self.window, text='学生可执行操作', font=24).pack(pady=100)
        Button(self.window, text='查询课表', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_consult()).pack()
        Button(self.window, text='修改课程', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_add()).pack()
        Button(self.window, text='查询分数', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_score()).pack()
        # backpage
        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack()
        self.window.mainloop()

        def stu_consult(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def stu_add(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def stu_score(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)


class Teacherpage:
    def __init__(self, parent_window):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-教师界面')
        self.window.geometry('800x600')
        Label(self.window, text='教师号登陆', font=24).pack(pady=100)
        Label(self.window, text='教师登陆账号', font=18).pack()
        self.admin_id = Entry(self.window).pack()
        Label(self.window, text='教师登陆密码', font=18).pack()
        self.admin_pw = Entry(self.window).pack()
        Button(self.window, text='Sign in', font=24, command=lambda: self.login_admin2()).pack()

        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack(pady=100)

        self.window.mainloop()

    def login_admin2(self):
        # 假的登陆函数
        TeaManage(self.window, tea_id=self.admin_id)

    def login_admin(self):
        # back to adminpage or go to admin manage page
        db = pymysql.connect('localhost', 'root', '', charset='utf8', port=3306)
        cursor = db.cursor()
        sql = "select * from admin_login where stuid='%s'and stupw='%s'" % (self.admin_id.get(),
                                                                            self.admin_pw.get())

        try:
            cursor.execute(sql)
            results = cursor.fetchone()
            if (results == None):
                print("Wrong password or not exists the id.")
                db.close()
                Teacherpage(self.window)
            else:
                print("Welcome!")
                db.close()
                TeaManage(self.window, ad_id=self.admin_id)
        except:
            print("Something wrong happened.")
            db.close()
            Teacherpage(self.window)


class TeaManage:
    # we have signed in.
    def __init__(self, parent_window, tea_id):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-教师操作界面')
        self.window.geometry('800x600')
        Label(self.window, text='教师可执行操作', font=24).pack(pady=100)
        Button(self.window, text='查询课程信息', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_consult()).pack()
        Button(self.window, text='增加课程', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_add()).pack()
        Button(self.window, text='取消授课', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_score()).pack()
        # backpage
        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack()
        self.window.mainloop()

        def stu_consult(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def stu_add(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def stu_score(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)


class Vistorpage:
    def __init__(self, parent_window):
        parent_window.destroy()
        self.window = tk.Tk()
        self.window.title('选课系统-游客界面')
        self.window.geometry('800x600')
        Label(self.window, text='Welcome to FDU!', font=24).pack(pady=100)
        Button(self.window, text='查询课表', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_consult()).pack()
        Button(self.window, text='查询教授', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_add()).pack()
        Button(self.window, text='查询院系', fg='white', activebackground='red', bg='gray', width=30,
               height=3, font=24, command=lambda: self.stu_score()).pack()

        Button(self.window, text='ReStart', fg='white', activebackground='red', bg='gray',
               command=lambda: Startpage(self.window)).pack()

        self.window.mainloop()

        def stu_consult(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def stu_add(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)

        def stu_score(self):
            Button(self.window, text='ReManagePage', fg='white', activebackground='red', bg='gray',
                   command=lambda: AdminManage(self.window, ad_id=ad_id)).pack(pady=100)


if __name__ == '__main__':
    window = tk.Tk()
    Startpage(window)
